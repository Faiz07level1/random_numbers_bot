

import asyncio
from aiogram.types import Message, ChatMemberUpdated, CallbackQuery
import random
from aiogram.filters import Command
from app.keyboard import rate_keyboard, keyboard_1, my_inline_button
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram import F, Router
from app.database.requests import update_money_by_username, get_games_by_username

router = Router()

class Rate(StatesGroup):
    rate_num = State()

movements = ["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞"]
lexicon = {"scissors": "–ù–æ–∂–Ω–∏—Ü—ã", "paper": "–ë—É–º–∞–≥–∞", "rock": "–ö–∞–º–µ–Ω—å"}
async def get_random_meaning() -> str:
    return random.choice(movements)


@router.callback_query(F.data == "rate")
async def rate_start(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Rate.rate_num)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É –æ—Ç 1 –¥–æ 50")

@router.message(Rate.rate_num)
async def rate_start(message: Message, state: FSMContext):
    games = await get_games_by_username(message.from_user.username)
    
        
    if message.text.isdigit():
        await state.update_data(rate_num=int(message.text))
        data = await state.get_data()
        if data["rate_num"] > games.money:
            await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç—É —Å—Ç–æ–ª—å–∫–æ –º–∞–Ω–∏–ø—É–ø—Å–∏–∫–æ–≤\n"
                                 F"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —ç—Ç–æ {games.money}ü§ë")
        else:
            if (data["rate_num"] > 50):
                await state.set_state(Rate.rate_num)
                await message.answer("–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 50")
                await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ")
            elif (data["rate_num"] < 1):
                await state.set_state(Rate.rate_num)
                await message.answer("–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 1")
                await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ")
            else:
                await message.answer("–°—Ç–∞–≤–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞\n"
                                    "–î–∞–≤–∞–π—Ç–µ –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞", reply_markup=my_inline_button)

    else:
        await state.set_state(Rate.rate_num)
        await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
        
        
# @router.message(F.data == "rock-paper-scissors")
# async def proposal_do(message: Message):
#     await message.answer('–û—Ç–ª–∏—á–Ω–æ! –î–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!', reply_markup=my_inline_button)



@router.callback_query((F.data.in_(["scissors","paper","rock"])))
async def start_bot(callback: CallbackQuery, state: FSMContext):
    meaning = await asyncio.create_task(get_random_meaning())
    games = await get_games_by_username(callback.from_user.username)
    data = await state.get_data()
    await state.clear()
    if (lexicon[callback.data] == meaning):
        await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
        await state.set_state(Rate.rate_num)
        await callback.message.answer("–ù–∏—á—å—è\n"
                                      "–î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑")
        await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —á–∏—Å–ª–æ")
    if (lexicon[callback.data] == "–ö–∞–º–µ–Ω—å"):
        if (meaning == "–ë—É–º–∞–≥–∞"):
            await update_money_by_username(username=callback.from_user.username, money=games.money-data["rate_num"])
            await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
            await callback.message.answer(text=F"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, —è –≤—ã–±—Ä–∞–ª {meaning}")
            await callback.message.answer(text=F"–£ –≤–∞—Å –±—ã–ª–æ {games.money}ü§ë\n"
                                          F"–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {data['rate_num']}ü§ë\n"
                                          F"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {games.money-data['rate_num']}ü§ë", reply_markup=rate_keyboard)
        if (meaning == "–ù–æ–∂–Ω–∏—Ü—ã"):
            await update_money_by_username(username=callback.from_user.username, money=games.money+data["rate_num"])
            await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
            await callback.message.answer(text=F"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏, —è –≤—ã–±—Ä–∞–ª {meaning}")
            await callback.message.answer(text=F"–£ –≤–∞—Å –±—ã–ª–æ {games.money}ü§ë\n"
                                          F"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ {data['rate_num']}ü§ë\n"
                                          F"–£ –≤–∞—Å –µ—Å—Ç—å {games.money+data['rate_num']}ü§ë", reply_markup=rate_keyboard)
    if (lexicon[callback.data] == "–ù–æ–∂–Ω–∏—Ü—ã"):
        if (meaning == "–ë—É–º–∞–≥–∞"):
            await update_money_by_username(username=callback.from_user.username, money=games.money+data["rate_num"])
            await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
            await callback.message.answer(text=F"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏, —è –≤—ã–±—Ä–∞–ª {meaning}")
            await callback.message.answer(text=F"–£ –≤–∞—Å –±—ã–ª–æ {games.money}ü§ë\n"
                                          F"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ {data['rate_num']}ü§ë\n"
                                          F"–£ –≤–∞—Å –µ—Å—Ç—å {games.money+data['rate_num']}ü§ë", reply_markup=rate_keyboard)
        if (meaning == "–ö–∞–º–µ–Ω—å"):
            await update_money_by_username(username=callback.from_user.username, money=games.money-data["rate_num"])
            await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
            await callback.message.answer(text=F"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, —è –≤—ã–±—Ä–∞–ª {meaning}")
            await callback.message.answer(text=F"–£ –≤–∞—Å –±—ã–ª–æ {games.money}ü§ë\n"
                                          F"–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {data['rate_num']}ü§ë\n"
                                          F"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {games.money-data['rate_num']}ü§ë", reply_markup=rate_keyboard)
    if (lexicon[callback.data] == "–ë—É–º–∞–≥–∞"):
        if (meaning == "–ù–æ–∂–Ω–∏—Ü—ã"):
            await update_money_by_username(username=callback.from_user.username, money=games.money-data["rate_num"])
            await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
            await callback.message.answer(text=F"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, —è –≤—ã–±—Ä–∞–ª {meaning}")
            await callback.message.answer(text=F"–£ –≤–∞—Å –±—ã–ª–æ {games.money}\n"
                                          F"–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {data['rate_num']}ü§ë\n"
                                          F"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {games.money-data['rate_num']}ü§ë", reply_markup=rate_keyboard)
        if (meaning == "–ö–∞–º–µ–Ω—å"):
            await update_money_by_username(username=callback.from_user.username, money=games.money+data["rate_num"])
            await callback.message.answer(F"–í—ã –≤—ã–±—Ä–∞–ª–∏ {lexicon[callback.data]}")
            await callback.message.answer(text=F"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏, —è –≤—ã–±—Ä–∞–ª {meaning}")
            await callback.message.answer(text=F"–£ –≤–∞—Å –±—ã–ª–æ {games.money}ü§ë\n"
                                          F"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ {data['rate_num']}ü§ë\n"
                                          F"–£ –≤–∞—Å –µ—Å—Ç—å {games.money+data['rate_num']}ü§ë", reply_markup=rate_keyboard)
    
    


    